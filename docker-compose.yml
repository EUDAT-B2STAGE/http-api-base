
###############################
# GLOBAL CONFIGURATION
conf:
  image: busybox
  command: ./boot
  environment:
    APP_MODE: ${SELECTED_APP_MODE}
    # Decide which service should handle users inside the backend server
    BACKEND_AUTH_SERVICE: relationaldb
###############################


###############################
backend:
  extends:
    service: conf
  image: eudatb2stage/apiserver:neo4j2
  hostname: restapi
  # user may be overriden from project config
  # note: if you change the user, you should also
  # fix permissions (e.g. sqllite directory)
  user: root
  working_dir: /code
  environment:
    PYTHON_SERVER_CATEGORY: backend
  volumes:
    # # Sql lite database
    # - restangulask_apilitedb:/dbs
    # Base code
    - ../backend:/code
    # Project configuration
    - ./vanilla/specs:/code/restapi/confs/main
    # Swagger API definition
    - ./vanilla/swagger:/code/restapi/confs/custom
    # Rest API endpoints (code)
    - ../apis:/code/restapi/resources/custom
    # Rest API services models
    - ../models:/code/commons/models/custom
    # JWT tokens secret
    - jwt_tokens:/jwt_tokens
    # Tests
    - ../tests/backend:/code/test/custom
    # Celery Tasks
    - ../tasks:/code/commons/tasks/custom


###############################
#################################
# REDIS key/value store
redqueue:
  image: redis:alpine
  command: redis-server --appendonly yes
  hostname: myqueue
  volumes:
    - ${VOLUMES_PREFIX}_redisdata:/data

worker:
  extends:
    file: docker-compose.yml
    service: backend
  hostname: celworker
  command: celery worker -c 1 -A restapi.resources.services.celery.worker.celery_app

#################################
# Database administration

# This docker image let you access sqllite/postgres/mysql
# with a phpmyadmin-like web page
sqladmin:
  image: eudatb2stage/sqladminer:latest
  # links:
  #   - sql:db
  # ports:
  #   - 8888:80

##############################
htmlfiles:
  image: alpine
  command: echo 'launched'
  volumes:
    # js/css libraries installed via bower
    - ../libs/bower_components:/data/frontend/felask/static/bower
    # custom css files
    - ../css:/data/frontend/felask/static/css/custom
    # All the angular blueprints (&& templates)
    - ../frontend/js/angular:/data/frontend/felask/static/app/commons
    - ../frontend/css:/data/frontend/felask/static/css/base
    - ../frontend/fonts:/data/frontend/felask/static/fonts
    - ../js:/data/frontend/felask/static/app/custom
    - ../frontend/templates:/data/frontend/felask/static/app/templates/common
    - ../templates:/data/frontend/felask/static/app/templates/custom

##############################
# The proxy which decides to redirect requests
# based on URLs received.
# Redirects /api to backend
# Listens on port 80
# Should implements SSL on 443

proxy:
  image: nginx:1.11-alpine
  hostname: iamaproxy
  volumes_from:
    - htmlfiles
  volumes:
    - ../containers/nginx_proxy:/etc/nginx/conf.d
    - ../frontend/felask/static:/static

##############################
swagger:
  image: eudatb2stage/swagger-ui

#######################
# Define here your services

# searchindex:
#   image: elasticsearch
#   hostname: elastic
#   volumes:
#       - restangulask_graphbased_elasticdata:/usr/share/elasticsearch/data

gdb:
  # image: neo4j  # 3.0 to be tested
  image: neo4j:2.3.3
  volumes:
    - ${VOLUMES_PREFIX}_graphdata:/data
  environment:
    NEO4J_AUTH: neo4j/chooseapassword
